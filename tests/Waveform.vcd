$version Generated by VerilatedVcd $end
$date Fri Mar  1 18:34:25 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire  1 t! clk $end
  $var wire 32 u! fpu_out [31:0] $end
  $var wire 32 s! instruction [31:0] $end
  $scope module fpu_top $end
   $var wire  1 t! clk $end
   $var wire  5 K curr_op [4:0] $end
   $var wire  5 O exec_op [4:0] $end
   $var wire 32 Y fad [31:0] $end
   $var wire 32 {! fcls [31:0] $end
   $var wire 32 z! fcsr [31:0] $end
   $var wire 32 \ fdi [31:0] $end
   $var wire 32 d fe [31:0] $end
   $var wire 32 U fma [31:0] $end
   $var wire 32 ` fmi [31:0] $end
   $var wire 32 V fms [31:0] $end
   $var wire 32 [ fmu [31:0] $end
   $var wire 32 a fmx [31:0] $end
   $var wire 32 X fnma [31:0] $end
   $var wire 32 W fnms [31:0] $end
   $var wire 32 u! fpu_out [31:0] $end
   $var wire 32 b fq [31:0] $end
   $var wire 32 ] fsj [31:0] $end
   $var wire 32 ^ fsn [31:0] $end
   $var wire 32 y! fsq [31:0] $end
   $var wire 32 Z fsu [31:0] $end
   $var wire 32 _ fsx [31:0] $end
   $var wire 32 c ft [31:0] $end
   $var wire 32 F ins_p1 [31:0] $end
   $var wire 32 P ins_p2 [31:0] $end
   $var wire 32 f ins_p3 [31:0] $end
   $var wire 32 s! instruction [31:0] $end
   $var wire  5 v! op1_addr [4:0] $end
   $var wire  5 w! op2_addr [4:0] $end
   $var wire  5 x! op3_addr [4:0] $end
   $var wire  5 G opcode1 [4:0] $end
   $var wire  5 H opcode2 [4:0] $end
   $var wire  2 I opcode3 [1:0] $end
   $var wire  1 J opcode4 $end
   $var wire 32 L oper1 [31:0] $end
   $var wire 32 M oper2 [31:0] $end
   $var wire 32 N oper3 [31:0] $end
   $var wire 32 # operand_1 [31:0] $end
   $var wire 32 $ operand_2 [31:0] $end
   $var wire 32 % operand_3 [31:0] $end
   $var wire 32 Q operand_one [31:0] $end
   $var wire 32 S operand_three [31:0] $end
   $var wire 32 R operand_two [31:0] $end
   $var wire 32 & regFile(0) [31:0] $end
   $var wire 32 ' regFile(1) [31:0] $end
   $var wire 32 0 regFile(10) [31:0] $end
   $var wire 32 1 regFile(11) [31:0] $end
   $var wire 32 2 regFile(12) [31:0] $end
   $var wire 32 3 regFile(13) [31:0] $end
   $var wire 32 4 regFile(14) [31:0] $end
   $var wire 32 5 regFile(15) [31:0] $end
   $var wire 32 6 regFile(16) [31:0] $end
   $var wire 32 7 regFile(17) [31:0] $end
   $var wire 32 8 regFile(18) [31:0] $end
   $var wire 32 9 regFile(19) [31:0] $end
   $var wire 32 ( regFile(2) [31:0] $end
   $var wire 32 : regFile(20) [31:0] $end
   $var wire 32 ; regFile(21) [31:0] $end
   $var wire 32 < regFile(22) [31:0] $end
   $var wire 32 = regFile(23) [31:0] $end
   $var wire 32 > regFile(24) [31:0] $end
   $var wire 32 ? regFile(25) [31:0] $end
   $var wire 32 @ regFile(26) [31:0] $end
   $var wire 32 A regFile(27) [31:0] $end
   $var wire 32 B regFile(28) [31:0] $end
   $var wire 32 C regFile(29) [31:0] $end
   $var wire 32 ) regFile(3) [31:0] $end
   $var wire 32 D regFile(30) [31:0] $end
   $var wire 32 E regFile(31) [31:0] $end
   $var wire 32 * regFile(4) [31:0] $end
   $var wire 32 + regFile(5) [31:0] $end
   $var wire 32 , regFile(6) [31:0] $end
   $var wire 32 - regFile(7) [31:0] $end
   $var wire 32 . regFile(8) [31:0] $end
   $var wire 32 / regFile(9) [31:0] $end
   $var wire 32 T result [31:0] $end
   $var wire 32 e writeback_data [31:0] $end
   $scope module fadd1 $end
    $var wire  8 O! finalExp [7:0] $end
    $var wire 24 R! finalMant [23:0] $end
    $var wire  1 L! finalSign $end
    $var wire 32 #" i [31:0] $end
    $var wire  1 K! largerMag $end
    $var wire 32 Q num1 [31:0] $end
    $var wire  8 M! num1Exp [7:0] $end
    $var wire 24 P! num1Mant [23:0] $end
    $var wire 32 R num2 [31:0] $end
    $var wire  8 N! num2Exp [7:0] $end
    $var wire 24 Q! num2Mant [23:0] $end
    $var wire 32 Y out_num [31:0] $end
    $var wire 25 S! sumMants [24:0] $end
   $upscope $end
   $scope module fclass1 $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 {! out_val [31:0] $end
    $var wire 32 {! result [31:0] $end
    $var wire 32 Q val1 [31:0] $end
   $upscope $end
   $scope module fdiv1 $end
    $var wire 32 \ div_out [31:0] $end
    $var wire 32 R dividend [31:0] $end
    $var wire 32 Q divisor [31:0] $end
    $var wire 32 a! temp_out [31:0] $end
    $scope module fi0 $end
     $var wire 32 %" magic_number [31:0] $end
     $var wire 32 R num1 [31:0] $end
     $var wire 32 a! num_out [31:0] $end
     $var wire 32 b! temp_out [31:0] $end
     $scope module f1 $end
      $var wire  8 d! expF [7:0] $end
      $var wire 32 |! i [31:0] $end
      $var wire 24 e! mantissa [23:0] $end
      $var wire 24 f! mantissa1 [23:0] $end
      $var wire 24 f! mantissa2 [23:0] $end
      $var wire 48 g! mantissaProd [47:0] $end
      $var wire 32 b! num1 [31:0] $end
      $var wire 32 b! num2 [31:0] $end
      $var wire 32 a! out_mul [31:0] $end
      $var wire  1 c! sign $end
     $upscope $end
    $upscope $end
    $scope module fm0 $end
     $var wire  8 j! expF [7:0] $end
     $var wire 32 |! i [31:0] $end
     $var wire 24 k! mantissa [23:0] $end
     $var wire 24 k mantissa1 [23:0] $end
     $var wire 24 l! mantissa2 [23:0] $end
     $var wire 48 m! mantissaProd [47:0] $end
     $var wire 32 Q num1 [31:0] $end
     $var wire 32 a! num2 [31:0] $end
     $var wire 32 \ out_mul [31:0] $end
     $var wire  1 i! sign $end
    $upscope $end
   $upscope $end
   $scope module feq1 $end
    $var wire 32 b res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
   $upscope $end
   $scope module fle1 $end
    $var wire  8 o! exp1 [7:0] $end
    $var wire  8 p! exp2 [7:0] $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 23 q! mantissa1 [22:0] $end
    $var wire 23 r! mantissa2 [22:0] $end
    $var wire 32 d out [31:0] $end
    $var wire 32 d res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
   $upscope $end
   $scope module flt1 $end
    $var wire  8 o! exp1 [7:0] $end
    $var wire  8 p! exp2 [7:0] $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 23 q! mantissa1 [22:0] $end
    $var wire 23 r! mantissa2 [22:0] $end
    $var wire 32 c out [31:0] $end
    $var wire 32 c res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
   $upscope $end
   $scope module fmadd1 $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 32 S in3 [31:0] $end
    $var wire 32 g out [31:0] $end
    $var wire 32 U out2 [31:0] $end
    $var wire 32 U res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
    $var wire 32 S var3 [31:0] $end
    $scope module fadd1 $end
     $var wire  8 s finalExp [7:0] $end
     $var wire 24 v finalMant [23:0] $end
     $var wire  1 p finalSign $end
     $var wire 32 }! i [31:0] $end
     $var wire  1 o largerMag $end
     $var wire 32 g num1 [31:0] $end
     $var wire  8 q num1Exp [7:0] $end
     $var wire 24 t num1Mant [23:0] $end
     $var wire 32 S num2 [31:0] $end
     $var wire  8 r num2Exp [7:0] $end
     $var wire 24 u num2Mant [23:0] $end
     $var wire 32 U out_num [31:0] $end
     $var wire 25 w sumMants [24:0] $end
    $upscope $end
    $scope module fmul1 $end
     $var wire  8 i expF [7:0] $end
     $var wire 32 |! i [31:0] $end
     $var wire 24 j mantissa [23:0] $end
     $var wire 24 k mantissa1 [23:0] $end
     $var wire 24 l mantissa2 [23:0] $end
     $var wire 48 m mantissaProd [47:0] $end
     $var wire 32 Q num1 [31:0] $end
     $var wire 32 R num2 [31:0] $end
     $var wire 32 g out_mul [31:0] $end
     $var wire  1 h sign $end
    $upscope $end
   $upscope $end
   $scope module fmax1 $end
    $var wire  8 o! exp1 [7:0] $end
    $var wire  8 p! exp2 [7:0] $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 23 q! mantissa1 [22:0] $end
    $var wire 23 r! mantissa2 [22:0] $end
    $var wire 32 a out [31:0] $end
    $var wire 32 a res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
   $upscope $end
   $scope module fmin1 $end
    $var wire  8 o! exp1 [7:0] $end
    $var wire  8 p! exp2 [7:0] $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 23 q! mantissa1 [22:0] $end
    $var wire 23 r! mantissa2 [22:0] $end
    $var wire 32 ` out [31:0] $end
    $var wire 32 ` res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
   $upscope $end
   $scope module fmsub1 $end
    $var wire 32 Q in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 32 S in3 [31:0] $end
    $var wire 32 x out [31:0] $end
    $var wire 32 V out2 [31:0] $end
    $var wire 32 V res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
    $var wire 32 S var3 [31:0] $end
    $scope module f1 $end
     $var wire  8 ~ finalExp [7:0] $end
     $var wire 24 #! finalMant [23:0] $end
     $var wire  1 { finalSign $end
     $var wire 32 ~! i [31:0] $end
     $var wire  1 z largerMag $end
     $var wire 32 Q num1 [31:0] $end
     $var wire  8 | num1Exp [7:0] $end
     $var wire 24 !! num1Mant [23:0] $end
     $var wire 32 y num2 [31:0] $end
     $var wire  8 } num2Exp [7:0] $end
     $var wire 24 "! num2Mant [23:0] $end
     $var wire 32 x out_num [31:0] $end
     $var wire 25 $! sumMants [24:0] $end
    $upscope $end
    $scope module fmul1 $end
     $var wire  8 &! expF [7:0] $end
     $var wire 32 |! i [31:0] $end
     $var wire 24 '! mantissa [23:0] $end
     $var wire 24 (! mantissa1 [23:0] $end
     $var wire 24 )! mantissa2 [23:0] $end
     $var wire 48 *! mantissaProd [47:0] $end
     $var wire 32 x num1 [31:0] $end
     $var wire 32 S num2 [31:0] $end
     $var wire 32 V out_mul [31:0] $end
     $var wire  1 %! sign $end
    $upscope $end
   $upscope $end
   $scope module fmul1 $end
    $var wire  8 ]! expF [7:0] $end
    $var wire 32 |! i [31:0] $end
    $var wire 24 ^! mantissa [23:0] $end
    $var wire 24 k mantissa1 [23:0] $end
    $var wire 24 l mantissa2 [23:0] $end
    $var wire 48 _! mantissaProd [47:0] $end
    $var wire 32 Q num1 [31:0] $end
    $var wire 32 R num2 [31:0] $end
    $var wire 32 [ out_mul [31:0] $end
    $var wire  1 h sign $end
   $upscope $end
   $scope module fnmadd1 $end
    $var wire 32 ,! in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 32 S in3 [31:0] $end
    $var wire 32 =! out [31:0] $end
    $var wire 32 X out2 [31:0] $end
    $var wire 32 X res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
    $var wire 32 S var3 [31:0] $end
    $scope module fadd1 $end
     $var wire  8 F! finalExp [7:0] $end
     $var wire 24 I! finalMant [23:0] $end
     $var wire  1 C! finalSign $end
     $var wire 32 "" i [31:0] $end
     $var wire  1 B! largerMag $end
     $var wire 32 =! num1 [31:0] $end
     $var wire  8 D! num1Exp [7:0] $end
     $var wire 24 G! num1Mant [23:0] $end
     $var wire 32 S num2 [31:0] $end
     $var wire  8 E! num2Exp [7:0] $end
     $var wire 24 H! num2Mant [23:0] $end
     $var wire 32 X out_num [31:0] $end
     $var wire 25 J! sumMants [24:0] $end
    $upscope $end
    $scope module fmul1 $end
     $var wire  8 >! expF [7:0] $end
     $var wire 32 |! i [31:0] $end
     $var wire 24 ?! mantissa [23:0] $end
     $var wire 24 1! mantissa1 [23:0] $end
     $var wire 24 l mantissa2 [23:0] $end
     $var wire 48 @! mantissaProd [47:0] $end
     $var wire 32 ,! num1 [31:0] $end
     $var wire 32 R num2 [31:0] $end
     $var wire 32 =! out_mul [31:0] $end
     $var wire  1 .! sign $end
    $upscope $end
   $upscope $end
   $scope module fnmsub1 $end
    $var wire 32 ,! in1 [31:0] $end
    $var wire 32 R in2 [31:0] $end
    $var wire 32 S in3 [31:0] $end
    $var wire 32 -! out [31:0] $end
    $var wire 32 W out2 [31:0] $end
    $var wire 32 W res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
    $var wire 32 S var3 [31:0] $end
    $scope module fmul1 $end
     $var wire  8 /! expF [7:0] $end
     $var wire 32 |! i [31:0] $end
     $var wire 24 0! mantissa [23:0] $end
     $var wire 24 1! mantissa1 [23:0] $end
     $var wire 24 l mantissa2 [23:0] $end
     $var wire 48 2! mantissaProd [47:0] $end
     $var wire 32 ,! num1 [31:0] $end
     $var wire 32 R num2 [31:0] $end
     $var wire 32 -! out_mul [31:0] $end
     $var wire  1 .! sign $end
    $upscope $end
    $scope module fsub1 $end
     $var wire 32 W res [31:0] $end
     $var wire 32 ,! var1 [31:0] $end
     $var wire 32 R var2 [31:0] $end
     $scope module f1 $end
      $var wire  8 8! finalExp [7:0] $end
      $var wire 24 ;! finalMant [23:0] $end
      $var wire  1 5! finalSign $end
      $var wire 32 !" i [31:0] $end
      $var wire  1 4! largerMag $end
      $var wire 32 ,! num1 [31:0] $end
      $var wire  8 6! num1Exp [7:0] $end
      $var wire 24 9! num1Mant [23:0] $end
      $var wire 32 y num2 [31:0] $end
      $var wire  8 7! num2Exp [7:0] $end
      $var wire 24 :! num2Mant [23:0] $end
      $var wire 32 W out_num [31:0] $end
      $var wire 25 <! sumMants [24:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module fsgnj1 $end
    $var wire 32 ] out_val [31:0] $end
    $var wire 32 Q val1 [31:0] $end
    $var wire 32 R val2 [31:0] $end
   $upscope $end
   $scope module fsgnjn1 $end
    $var wire 32 ^ out_val [31:0] $end
    $var wire 32 Q val1 [31:0] $end
    $var wire 32 R val2 [31:0] $end
   $upscope $end
   $scope module fsgnjx1 $end
    $var wire 32 _ out_val [31:0] $end
    $var wire 32 Q val1 [31:0] $end
    $var wire 32 R val2 [31:0] $end
   $upscope $end
   $scope module fsqrt1 $end
    $var wire 32 y! res [31:0] $end
    $var wire 32 y! shifted_num [31:0] $end
    $var wire 32 Q var1 [31:0] $end
   $upscope $end
   $scope module fsub1 $end
    $var wire 32 Z res [31:0] $end
    $var wire 32 Q var1 [31:0] $end
    $var wire 32 R var2 [31:0] $end
    $scope module f1 $end
     $var wire  8 X! finalExp [7:0] $end
     $var wire 24 [! finalMant [23:0] $end
     $var wire  1 U! finalSign $end
     $var wire 32 $" i [31:0] $end
     $var wire  1 T! largerMag $end
     $var wire 32 Q num1 [31:0] $end
     $var wire  8 V! num1Exp [7:0] $end
     $var wire 24 Y! num1Mant [23:0] $end
     $var wire 32 y num2 [31:0] $end
     $var wire  8 W! num2Exp [7:0] $end
     $var wire 24 Z! num2Mant [23:0] $end
     $var wire 32 Z out_num [31:0] $end
     $var wire 25 \! sumMants [24:0] $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000000000 #
b00000000000000000000000000000000 $
b00000000000000000000000000000000 %
b01000000000000000000000000000000 &
b00000000000000000000000000000000 '
b00000000000000000000000000000000 (
b01000000000000000000000000000000 )
b00000000000000000000000000000000 *
b00000000000000000000000000000000 +
b00000000000000000000000000000000 ,
b00000000000000000000000000000000 -
b00000000000000000000000000000000 .
b00000000000000000000000000000000 /
b00000000000000000000000000000000 0
b00000000000000000000000000000000 1
b00000000000000000000000000000000 2
b00000000000000000000000000000000 3
b00000000000000000000000000000000 4
b01000000000000000000000000000000 5
b00000000000000000000000000000000 6
b00000000000000000000000000000000 7
b00000000000000000000000000000000 8
b00000000000000000000000000000000 9
b00000000000000000000000000000000 :
b00000000000000000000000000000000 ;
b00000000000000000000000000000000 <
b00000000000000000000000000000000 =
b00000000000000000000000000000000 >
b00000000000000000000000000000000 ?
b00000000000000000000000000000000 @
b00000000000000000000000000000000 A
b00000000000000000000000000000000 B
b00000000000000000000000000000000 C
b00000000000000000000000000000000 D
b00000000000000000000000000000000 E
b00000000000000000000000000000000 F
b00000 G
b00000 H
b00 I
0J
b00000 K
b00000000000000000000000000000000 L
b00000000000000000000000000000000 M
b00000000000000000000000000000000 N
b00000 O
b00000000000000000000000000000000 P
b00000000000000000000000000000000 Q
b00000000000000000000000000000000 R
b00000000000000000000000000000000 S
b00000000000000000000000000000000 T
b00000000000000000000000000000000 U
b00000000000000000000000000000000 V
b10000000100000000000000000000000 W
b11111111100000000000000000000000 X
b00000000000000000000000000000000 Y
b00000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b00000000000000000000000000000000 \
b00000000000000000000000000000000 ]
b10000000000000000000000000000000 ^
b00000000000000000000000000000000 _
b00000000000000000000000000000000 `
b00000000000000000000000000000000 a
b00000000000000000000000000000001 b
b00000000000000000000000000000001 c
b00000000000000000000000000000000 d
b00000000000000000000000000000000 e
b00000000000000000000000000000000 f
b00000000000000000000000000000000 g
0h
b00000000 i
b000000000000000000000000 j
b000000000000000000000000 k
b000000000000000000000000 l
b000000000000000000000000000000000000000000000000 m
0o
1p
b00000000 q
b00000000 r
b00000000 s
b100000000000000000000000 t
b100000000000000000000000 u
b000000000000000000000000 v
b1000000000000000000000000 w
b00000000000000000000000000000000 x
b10000000000000000000000000000000 y
0z
1{
b00000000 |
b00000000 }
b00000000 ~
b100000000000000000000000 !!
b100000000000000000000000 "!
b000000000000000000000000 #!
b0000000000000000000000000 $!
0%!
b00000000 &!
b000000000000000000000000 '!
b000000000000000000000000 (!
b000000000000000000000000 )!
b000000000000000000000000000000000000000000000000 *!
b10000000000000000000000000000000 ,!
b10000000000000000000000000000000 -!
1.!
b00000000 /!
b000000000000000000000000 0!
b100000000000000000000000 1!
b000000000000000000000000000000000000000000000000 2!
04!
05!
b00000000 6!
b00000000 7!
b00000001 8!
b100000000000000000000000 9!
b100000000000000000000000 :!
b000000000000000000000000 ;!
b1000000000000000000000000 <!
b10000000000000000000000000000000 =!
b00000000 >!
b000000000000000000000000 ?!
b000000000000000000000000000000000000000000000000 @!
0B!
0C!
b00000000 D!
b00000000 E!
b11111111 F!
b100000000000000000000000 G!
b100000000000000000000000 H!
b000000000000000000000000 I!
b0000000000000000000000000 J!
0K!
1L!
b00000000 M!
b00000000 N!
b00000000 O!
b100000000000000000000000 P!
b100000000000000000000000 Q!
b000000000000000000000000 R!
b1000000000000000000000000 S!
0T!
1U!
b00000000 V!
b00000000 W!
b00000000 X!
b100000000000000000000000 Y!
b100000000000000000000000 Z!
b000000000000000000000000 [!
b0000000000000000000000000 \!
b00000000 ]!
b000000000000000000000000 ^!
b000000000000000000000000000000000000000000000000 _!
b01111111000000110101000110011100 a!
b01011111001101110101100111011111 b!
0c!
b11111110 d!
b000001101010001100111000 e!
b101101110101100111011111 f!
b100000110101000110011100010111101101000001000001 g!
0i!
b00000000 j!
b000000000000000000000000 k!
b100000110101000110011100 l!
b000000000000000000000000000000000000000000000000 m!
b00000000 o!
b00000000 p!
b00000000000000000000000 q!
b00000000000000000000000 r!
b00011000000001111000000010000011 s!
1t!
b00000000000000000000000000000000 u!
b01111 v!
b00000 w!
b00011 x!
b00000000000000000000000000000000 y!
b00000000000000000000000000000000 z!
b00000000000000000000000000000000 {!
b00000000000000000000000000000000 |!
b00000000000000000000000000000000 }!
b00000000000000000000000000000000 ~!
b00000000000000000000000000000000 !"
b00000000000000000000000000000000 ""
b00000000000000000000000000000000 #"
b00000000000000000000000000000000 $"
b10111110011011101011001110111110 %"
#1
0t!
#2
b01000000000000000000000000000000 #
b01000000000000000000000000000000 $
b01000000000000000000000000000000 %
b00000000000000000000000000000000 &
b00011000000001111000000010000011 F
b00011 H
1t!
#3
0t!
#4
b00000000000000000000000000000000 $
b01000000000000000000000000000000 L
b01000000000000000000000000000000 M
b01000000000000000000000000000000 N
b00011000000001111000000010000011 P
b01000000000000000000000000000000 Q
b01000000000000000000000000000000 R
b01000000000000000000000000000000 S
b01000000110000000000000000000000 U
b01000000000000000000000000000000 V
b11000000100000000000000000000000 W
b11000000000000000000000000000000 X
b01000000100000000000000000000000 Y
b00111111100000000000000000000000 Z
b01000000100000000000000000000000 [
b00111111100000110101000110011100 \
b01000000000000000000000000000000 ]
b11000000000000000000000000000000 ^
b01000000000000000000000000000000 _
b01000000000000000000000000000000 `
b01000000000000000000000000000000 a
b01000000100000000000000000000000 g
b10000001 i
b100000000000000000000000 k
b100000000000000000000000 l
b010000000000000000000000000000000000000000000000 m
b10000001 q
b10000000 r
b10000001 s
b010000000000000000000000 u
b100000000000000000000000 v
b0110000000000000000000000 w
b00111111100000000000000000000000 x
b11000000000000000000000000000000 y
b10000000 |
b10000000 }
b01111111 ~
b10000000 &!
b100000000000000000000000 (!
b100000000000000000000000 )!
b010000000000000000000000000000000000000000000000 *!
b11000000000000000000000000000000 ,!
b11000000100000000000000000000000 -!
b10000001 /!
b010000000000000000000000000000000000000000000000 2!
b10000000 6!
b10000000 7!
b10000001 8!
b11000000100000000000000000000000 =!
b10000001 >!
b010000000000000000000000000000000000000000000000 @!
b10000001 D!
b10000000 E!
b10000000 F!
b010000000000000000000000 H!
b0010000000000000000000000 J!
b10000000 M!
b10000000 N!
b10000001 O!
b10000000 V!
b10000000 W!
b01111111 X!
b10000001 ]!
b010000000000000000000000000000000000000000000000 _!
b00111111000000110101000110011100 a!
b00111111001101110101100111011111 b!
b01111110 d!
b01111111 j!
b000001101010001100111000 k!
b010000011010100011001110000000000000000000000000 m!
b10000000 o!
b10000000 p!
1t!
#5
0t!
#6
b00000000000000000000000000000000 M
b00000000000000000000000000000000 R
b01000000110000000000000000000000 T
b01000000000000000000000000000000 U
b01000000100000000000000000000000 V
b11000000000000000000000000000000 W
b01000000000000000000000000000000 X
b01000000000000000000000000000000 Y
b01000000000000000000000000000000 Z
b00000000000000000000000000000000 [
b01111111100000110101000110011100 \
b00000000000000000000000000000000 a
b00000000000000000000000000000000 b
b00000000000000000000000000000001 d
b01000000110000000000000000000000 e
b00011000000001111000000010000011 f
b00000000000000000000000000000000 g
b00000000 i
b000000000000000000000000 l
b000000000000000000000000000000000000000000000000 m
1o
b00000000 q
b10000000 s
b000000000000000000000000 t
b100000000000000000000000 u
b000000000000000000000000 v
b0100000000000000000000000 w
b01000000000000000000000000000000 x
b10000000000000000000000000000000 y
b00000000 }
b10000000 ~
b000000000000000000000000 "!
b1100000000000000000000000 $!
b10000001 &!
b10000000000000000000000000000000 -!
b00000000 /!
b000000000000000000000000000000000000000000000000 2!
b00000000 7!
b10000000 8!
b000000000000000000000000 :!
b0100000000000000000000000 <!
b10000000000000000000000000000000 =!
b00000000 >!
b000000000000000000000000000000000000000000000000 @!
1B!
1C!
b00000000 D!
b000000000000000000000000 G!
b100000000000000000000000 H!
b1100000000000000000000000 J!
b00000000 N!
b10000000 O!
b000000000000000000000000 Q!
b0100000000000000000000000 S!
b00000000 W!
b10000000 X!
b000000000000000000000000 Z!
b1100000000000000000000000 \!
b00000000 ]!
b000000000000000000000000000000000000000000000000 _!
b01111111000000110101000110011100 a!
b01011111001101110101100111011111 b!
b11111110 d!
b11111111 j!
b00000000 p!
1t!
b01000000110000000000000000000000 u!
#7
0t!
#8
b01000000110000000000000000000000 '
b01000000000000000000000000000000 T
b01000000000000000000000000000000 e
1t!
b01000000000000000000000000000000 u!
#9
0t!
#10
b01000000000000000000000000000000 '
1t!
#11
0t!
#12
1t!
#13
0t!
#14
1t!
#15
0t!
#16
1t!
#17
0t!
#18
1t!
#19
0t!
